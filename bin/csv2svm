#!/usr/bin/env Rscript
#
# Copyright (C) 2016  Bjarte Johansen
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

" csv2svm.R

Usage:
  csv2svm.R [-h] [-f N] [-wk KEYS] [-o OUTPUT] [FILE]

Options:
  -h --help                   Show help message
  -w --overwrite-keys         Overwrite keys file instead of reading it
  -k FILE --keys=FILE         File with previous keys if needed
  -o FILE --output=FILE       Output file
  -f N --field=N              Field of category [default: 13]
" -> doc

library(data.table, quietly = TRUE)
library(docopt, quietly = TRUE)

opts <- docopt(doc, version = "0.2.0")

input <- opts$FILE
if (is.null(input)) {
    input <- "file:///dev/stdin"
}

output <- opts$`--output`
if (is.null(output)) {
    output <- stdout()
}

csv <- fread(
    input,
    sep = "\t",
    header = FALSE,
    quote = ""
)
colnames(csv) <- as.character(1:ncol(csv))

field <- as.integer(opts$`--field`)

long <- csv[, -field, with = FALSE]
long <- melt(long, measure.vars = colnames(long))

keys.file <- opts$`--keys`

if (!opts$`--overwrite-keys`
    && !is.null(keys.file)
    && file.exists(keys.file)) {
    keys <- fread(
        keys.file,
        header = FALSE,
        quote = "",
        sep = "\t",
        strip.white = FALSE,
        ## These are the names of the columns in the reshaped csv
        ## frame.
        col.names = c("variable", "value")
    )
} else {
    keys <- unique(long)[!is.na(value)]
    if (is.null(keys.file)) {
        keys.file <- format(
            Sys.time(),
            format = "%Y-%m-%H:%M:%S.key"
        )
    }
    write.table(
        keys,
        keys.file,
        sep = "\t",
        row.names = FALSE,
        col.names = FALSE,
        quote = FALSE
    )
}

## The keys are the indexes of the input vector to the model we have
## trained for libsvm. We need to convert each key to a index number,
## which is simply the row number. Because we are only interested if
## indexes are present or not, we also add a :1 to the end of the
## index. The reason for the space at the beginning is for printing
## purposes. It allows us to print the table without a seperator and
## all NA values will be removed.
keys[, ID := paste0(" ", 1:nrow(keys), ":1")]

wide <- merge(long, keys, all.x = TRUE, sort = FALSE)[, .(variable, ID)]
wide <- dcast(wide, rowid(variable) ~ variable, value.var = "ID")
wide[, variable := NULL]

categories <- cbind(as.numeric(factor(csv[,field])), wide)

write.table(
    categories,
    output,
    sep = "",
    row.names = FALSE,
    col.names = FALSE,
    quote = FALSE,
    na=""
)
